/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StandardUpgrade,
  StandardUpgradeInterface,
} from "../StandardUpgrade";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e36806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb146101a5578063b119490e146101b8578063dd62ed3e146101cd57600080fd5b806370a082311461016157806395d89b411461018a578063a457c2d71461019257600080fd5b806323b872dd116100b257806323b872dd1461012c578063313ce5671461013f578063395093511461014e57600080fd5b806306fdde03146100d9578063095ea7b3146100f757806318160ddd1461011a575b600080fd5b6100e1610206565b6040516100ee9190610b68565b60405180910390f35b61010a610105366004610bd4565b610298565b60405190151581526020016100ee565b6035545b6040519081526020016100ee565b61010a61013a366004610bfe565b6102b0565b604051601281526020016100ee565b61010a61015c366004610bd4565b6102d4565b61011e61016f366004610c3a565b6001600160a01b031660009081526033602052604090205490565b6100e1610313565b61010a6101a0366004610bd4565b610322565b61010a6101b3366004610bd4565b6103b9565b6101cb6101c6366004610cff565b6103c7565b005b61011e6101db366004610d6c565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60606036805461021590610d9f565b80601f016020809104026020016040519081016040528092919081815260200182805461024190610d9f565b801561028e5780601f106102635761010080835404028352916020019161028e565b820191906000526020600020905b81548152906001019060200180831161027157829003601f168201915b5050505050905090565b6000336102a681858561044b565b5060019392505050565b6000336102be85828561056f565b6102c98585856105fb565b506001949350505050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906102a6908290869061030e908790610dda565b61044b565b60606037805461021590610d9f565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156103ac5760405162461bcd60e51b815260206004820152602560248201527f42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102c9828686840361044b565b6000336102a68185856105fb565b60006103d360016107c9565b905080156103eb576000805461ff0019166101001790555b6103f584846108e4565b6103ff338361095d565b8015610445576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6001600160a01b0383166104ad5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a3565b6001600160a01b03821661050e5760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a3565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260346020908152604080832093861683529290522054600019811461044557818110156105ee5760405162461bcd60e51b815260206004820152601d60248201527f42455032303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103a3565b610445848484840361044b565b6001600160a01b03831661065f5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a3565b6001600160a01b0382166106c15760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a3565b6001600160a01b038316600090815260336020526040902054818110156107395760405162461bcd60e51b815260206004820152602660248201527f42455032303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103a3565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610770908490610dda565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107bc91815260200190565b60405180910390a3610445565b60008054610100900460ff1615610857578160ff1660011480156107ec5750303b155b61084f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103a3565b506000919050565b60005460ff8084169116106108c55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103a3565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661094f5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103a3565b6109598282610a41565b5050565b6001600160a01b0382166109b35760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103a3565b80603560008282546109c59190610dda565b90915550506001600160a01b038216600090815260336020526040812080548392906109f2908490610dda565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b600054610100900460ff16610aac5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016103a3565b8151610abf906036906020850190610acf565b508051610a3c9060379060208401905b828054610adb90610d9f565b90600052602060002090601f016020900481019282610afd5760008555610b43565b82601f10610b1657805160ff1916838001178555610b43565b82800160010185558215610b43579182015b82811115610b43578251825591602001919060010190610b28565b50610b4f929150610b53565b5090565b5b80821115610b4f5760008155600101610b54565b600060208083528351808285015260005b81811015610b9557858101830151858201604001528201610b79565b81811115610ba7576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146108df57600080fd5b60008060408385031215610be757600080fd5b610bf083610bbd565b946020939093013593505050565b600080600060608486031215610c1357600080fd5b610c1c84610bbd565b9250610c2a60208501610bbd565b9150604084013590509250925092565b600060208284031215610c4c57600080fd5b610c5582610bbd565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c8357600080fd5b813567ffffffffffffffff80821115610c9e57610c9e610c5c565b604051601f8301601f19908116603f01168101908282118183101715610cc657610cc6610c5c565b81604052838152866020858801011115610cdf57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610d1457600080fd5b833567ffffffffffffffff80821115610d2c57600080fd5b610d3887838801610c72565b94506020860135915080821115610d4e57600080fd5b50610d5b86828701610c72565b925050604084013590509250925092565b60008060408385031215610d7f57600080fd5b610d8883610bbd565b9150610d9660208401610bbd565b90509250929050565b600181811c90821680610db357607f821691505b60208210811415610dd457634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610dfb57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220514197f92207738b83b97da55660f57b2991d6ec7898f5356780c1a5b14e9c7d64736f6c634300080b0033";

export class StandardUpgrade__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StandardUpgrade> {
    return super.deploy(overrides || {}) as Promise<StandardUpgrade>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StandardUpgrade {
    return super.attach(address) as StandardUpgrade;
  }
  connect(signer: Signer): StandardUpgrade__factory {
    return super.connect(signer) as StandardUpgrade__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StandardUpgradeInterface {
    return new utils.Interface(_abi) as StandardUpgradeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StandardUpgrade {
    return new Contract(address, _abi, signerOrProvider) as StandardUpgrade;
  }
}
